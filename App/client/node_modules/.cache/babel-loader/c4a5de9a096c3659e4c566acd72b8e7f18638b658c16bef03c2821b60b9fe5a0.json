{"ast":null,"code":"var _jsxFileName = \"/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/NotesWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSocket } from '../../context/SocketContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { WidgetCategory } from '../../types/widget';\nimport withWidget from './withWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = NotesContainer;\nconst NotesTextarea = styled.textarea`\n  flex: 1;\n  resize: none;\n  padding: var(--spacing-md);\n  font-family: var(--font-primary);\n  font-size: var(--font-size-md);\n  border: 1px solid var(--${props => props.theme}-border);\n  border-radius: var(--border-radius-sm);\n  background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.02)'};\n  color: var(--${props => props.theme}-text-primary);\n\n  &:focus {\n    outline: none;\n    border-color: var(--${props => props.theme}-primary);\n  }\n`;\n_c2 = NotesTextarea;\nconst NotesControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: var(--spacing-sm);\n`;\n_c3 = NotesControls;\nconst SaveButton = styled.button`\n  background-color: var(--${props => props.theme}-primary);\n  color: ${props => props.theme === 'dark' ? 'black' : 'white'};\n  border: none;\n  padding: var(--spacing-xs) var(--spacing-md);\n  border-radius: var(--border-radius-sm);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  transition: background-color var(--transition-fast) ease;\n\n  &:hover {\n    background-color: var(--${props => props.theme}-primary-variant);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c4 = SaveButton;\nconst SaveStatus = styled.div`\n  font-size: var(--font-size-sm);\n  color: ${props => props.saved ? 'var(--dark-secondary)' : 'var(--dark-text-secondary)'};\n`;\n_c5 = SaveStatus;\nconst defaultConfig = {\n  placeholder: \"Type your notes here...\",\n  autoSave: false,\n  autoSaveInterval: 30000,\n  // 30 seconds\n  storageKey: 'playerNotes',\n  readOnly: false\n};\nconst NotesWidget = ({\n  id,\n  config\n}) => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const {\n    socket,\n    isConnected\n  } = useSocket();\n  const widgetConfig = {\n    ...defaultConfig,\n    ...config\n  };\n  const [notes, setNotes] = useState('');\n  const [savedNotes, setSavedNotes] = useState('');\n  const [isSaved, setIsSaved] = useState(true);\n  const [lastSaved, setLastSaved] = useState(null);\n\n  // Load notes from localStorage on mount\n  useEffect(() => {\n    const storedNotes = localStorage.getItem(widgetConfig.storageKey);\n    if (storedNotes) {\n      setNotes(storedNotes);\n      setSavedNotes(storedNotes);\n    }\n  }, [widgetConfig.storageKey]);\n\n  // Auto-save notes if enabled\n  useEffect(() => {\n    if (widgetConfig.autoSave && !isSaved) {\n      const timer = setTimeout(() => {\n        saveNotes();\n      }, widgetConfig.autoSaveInterval);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [notes, isSaved, widgetConfig.autoSave, widgetConfig.autoSaveInterval]);\n\n  // Listen for notes updates from server\n  useEffect(() => {\n    if (socket && isConnected) {\n      socket.on('notes:update', updatedNotes => {\n        setNotes(updatedNotes);\n        setSavedNotes(updatedNotes);\n        setIsSaved(true);\n        setLastSaved(new Date().toLocaleTimeString());\n      });\n\n      // Request initial notes\n      socket.emit('notes:request');\n      return () => {\n        socket.off('notes:update');\n      };\n    }\n  }, [socket, isConnected]);\n\n  // Check if notes have changed\n  useEffect(() => {\n    setIsSaved(notes === savedNotes);\n  }, [notes, savedNotes]);\n  const handleNotesChange = e => {\n    setNotes(e.target.value);\n  };\n  const saveNotes = () => {\n    // Save to localStorage\n    localStorage.setItem(widgetConfig.storageKey, notes);\n    setSavedNotes(notes);\n    setIsSaved(true);\n    setLastSaved(new Date().toLocaleTimeString());\n\n    // Send to server if connected\n    if (socket && isConnected) {\n      socket.emit('notes:save', notes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotesContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NotesTextarea, {\n      value: notes,\n      onChange: handleNotesChange,\n      placeholder: widgetConfig.placeholder,\n      theme: theme,\n      readOnly: widgetConfig.readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), !widgetConfig.readOnly && /*#__PURE__*/_jsxDEV(NotesControls, {\n      children: [/*#__PURE__*/_jsxDEV(SaveStatus, {\n        saved: isSaved,\n        children: isSaved ? lastSaved ? `Last saved at ${lastSaved}` : 'All changes saved' : 'Unsaved changes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n        onClick: saveNotes,\n        disabled: isSaved,\n        theme: theme,\n        children: \"Save Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesWidget, \"rJzL4KwMu7YmGHsKPIwmFfHmJ5c=\", false, function () {\n  return [useTheme, useSocket];\n});\n_c6 = NotesWidget;\nexport default _c7 = withWidget(NotesWidget, {\n  metadata: {\n    name: 'Notes',\n    description: 'Take and save notes',\n    category: WidgetCategory.UTILITY,\n    icon: '📝',\n    defaultSize: {\n      w: 6,\n      h: 3\n    },\n    minW: 3,\n    minH: 2\n  },\n  defaultConfig\n});\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"NotesContainer\");\n$RefreshReg$(_c2, \"NotesTextarea\");\n$RefreshReg$(_c3, \"NotesControls\");\n$RefreshReg$(_c4, \"SaveButton\");\n$RefreshReg$(_c5, \"SaveStatus\");\n$RefreshReg$(_c6, \"NotesWidget\");\n$RefreshReg$(_c7, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","styled","useSocket","useTheme","WidgetCategory","withWidget","jsxDEV","_jsxDEV","NotesContainer","div","_c","NotesTextarea","textarea","props","theme","_c2","NotesControls","_c3","SaveButton","button","_c4","SaveStatus","saved","_c5","defaultConfig","placeholder","autoSave","autoSaveInterval","storageKey","readOnly","NotesWidget","id","config","_s","socket","isConnected","widgetConfig","notes","setNotes","savedNotes","setSavedNotes","isSaved","setIsSaved","lastSaved","setLastSaved","storedNotes","localStorage","getItem","timer","setTimeout","saveNotes","clearTimeout","on","updatedNotes","Date","toLocaleTimeString","emit","off","handleNotesChange","e","target","value","setItem","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c6","_c7","metadata","name","description","category","UTILITY","icon","defaultSize","w","h","minW","minH","$RefreshReg$"],"sources":["/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/NotesWidget.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSocket } from '../../context/SocketContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { WidgetProps, WidgetCategory } from '../../types/widget';\nimport withWidget from './withWidget';\n\nconst NotesContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NotesTextarea = styled.textarea`\n  flex: 1;\n  resize: none;\n  padding: var(--spacing-md);\n  font-family: var(--font-primary);\n  font-size: var(--font-size-md);\n  border: 1px solid var(--${props => props.theme}-border);\n  border-radius: var(--border-radius-sm);\n  background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.02)'};\n  color: var(--${props => props.theme}-text-primary);\n\n  &:focus {\n    outline: none;\n    border-color: var(--${props => props.theme}-primary);\n  }\n`;\n\nconst NotesControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: var(--spacing-sm);\n`;\n\nconst SaveButton = styled.button`\n  background-color: var(--${props => props.theme}-primary);\n  color: ${props => props.theme === 'dark' ? 'black' : 'white'};\n  border: none;\n  padding: var(--spacing-xs) var(--spacing-md);\n  border-radius: var(--border-radius-sm);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  transition: background-color var(--transition-fast) ease;\n\n  &:hover {\n    background-color: var(--${props => props.theme}-primary-variant);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst SaveStatus = styled.div<{ saved: boolean }>`\n  font-size: var(--font-size-sm);\n  color: ${props => props.saved ? 'var(--dark-secondary)' : 'var(--dark-text-secondary)'};\n`;\n\ninterface NotesWidgetConfig {\n  placeholder: string;\n  autoSave: boolean;\n  autoSaveInterval: number;\n  storageKey: string;\n  readOnly: boolean;\n}\n\nconst defaultConfig: NotesWidgetConfig = {\n  placeholder: \"Type your notes here...\",\n  autoSave: false,\n  autoSaveInterval: 30000, // 30 seconds\n  storageKey: 'playerNotes',\n  readOnly: false\n};\n\nconst NotesWidget: React.FC<WidgetProps> = ({ id, config }) => {\n  const { theme } = useTheme();\n  const { socket, isConnected } = useSocket();\n  const widgetConfig = { ...defaultConfig, ...config } as NotesWidgetConfig;\n\n  const [notes, setNotes] = useState('');\n  const [savedNotes, setSavedNotes] = useState('');\n  const [isSaved, setIsSaved] = useState(true);\n  const [lastSaved, setLastSaved] = useState<string | null>(null);\n\n  // Load notes from localStorage on mount\n  useEffect(() => {\n    const storedNotes = localStorage.getItem(widgetConfig.storageKey);\n    if (storedNotes) {\n      setNotes(storedNotes);\n      setSavedNotes(storedNotes);\n    }\n  }, [widgetConfig.storageKey]);\n\n  // Auto-save notes if enabled\n  useEffect(() => {\n    if (widgetConfig.autoSave && !isSaved) {\n      const timer = setTimeout(() => {\n        saveNotes();\n      }, widgetConfig.autoSaveInterval);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [notes, isSaved, widgetConfig.autoSave, widgetConfig.autoSaveInterval]);\n\n  // Listen for notes updates from server\n  useEffect(() => {\n    if (socket && isConnected) {\n      socket.on('notes:update', (updatedNotes: string) => {\n        setNotes(updatedNotes);\n        setSavedNotes(updatedNotes);\n        setIsSaved(true);\n        setLastSaved(new Date().toLocaleTimeString());\n      });\n\n      // Request initial notes\n      socket.emit('notes:request');\n\n      return () => {\n        socket.off('notes:update');\n      };\n    }\n  }, [socket, isConnected]);\n\n  // Check if notes have changed\n  useEffect(() => {\n    setIsSaved(notes === savedNotes);\n  }, [notes, savedNotes]);\n\n  const handleNotesChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setNotes(e.target.value);\n  };\n\n  const saveNotes = () => {\n    // Save to localStorage\n    localStorage.setItem(widgetConfig.storageKey, notes);\n    setSavedNotes(notes);\n    setIsSaved(true);\n    setLastSaved(new Date().toLocaleTimeString());\n\n    // Send to server if connected\n    if (socket && isConnected) {\n      socket.emit('notes:save', notes);\n    }\n  };\n\n  return (\n    <NotesContainer>\n      <NotesTextarea\n        value={notes}\n        onChange={handleNotesChange}\n        placeholder={widgetConfig.placeholder}\n        theme={theme}\n        readOnly={widgetConfig.readOnly}\n      />\n      {!widgetConfig.readOnly && (\n        <NotesControls>\n          <SaveStatus saved={isSaved}>\n            {isSaved\n              ? lastSaved ? `Last saved at ${lastSaved}` : 'All changes saved'\n              : 'Unsaved changes'}\n          </SaveStatus>\n          <SaveButton\n            onClick={saveNotes}\n            disabled={isSaved}\n            theme={theme}\n          >\n            Save Notes\n          </SaveButton>\n        </NotesControls>\n      )}\n    </NotesContainer>\n  );\n};\n\nexport default withWidget(NotesWidget, {\n  metadata: {\n    name: 'Notes',\n    description: 'Take and save notes',\n    category: WidgetCategory.UTILITY,\n    icon: '📝',\n    defaultSize: {\n      w: 6,\n      h: 3,\n    },\n    minW: 3,\n    minH: 2,\n  },\n  defaultConfig,\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}