{"ast":null,"code":"var _jsxFileName = \"/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/DiceRollerWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSocket } from '../../context/SocketContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { WidgetCategory } from '../../types/widget';\nimport withWidget from './withWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiceRollerContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = DiceRollerContainer;\nconst DiceControls = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: var(--spacing-sm);\n  margin-bottom: var(--spacing-md);\n`;\n_c2 = DiceControls;\nconst DiceButton = styled.button`\n  background-color: ${props => props.active ? `var(--${props.theme}-primary)` : props.theme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)'};\n  color: ${props => props.active ? props.theme === 'dark' ? 'black' : 'white' : `var(--${props.theme}-text-primary)`};\n  border: 1px solid ${props => props.active ? `var(--${props.theme}-primary)` : `var(--${props.theme}-border)`};\n  border-radius: var(--border-radius-sm);\n  padding: var(--spacing-sm);\n  font-size: var(--font-size-md);\n  font-weight: ${props => props.active ? '700' : '400'};\n  cursor: pointer;\n  transition: all var(--transition-fast) ease;\n\n  &:hover {\n    background-color: ${props => props.active ? `var(--${props.theme}-primary-variant)` : props.theme === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)'};\n  }\n`;\n_c3 = DiceButton;\nconst QuantityControls = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: var(--spacing-md);\n`;\n_c4 = QuantityControls;\nconst QuantityLabel = styled.span`\n  margin-right: var(--spacing-md);\n  font-size: var(--font-size-sm);\n  color: var(--${props => props.theme}-text-secondary);\n`;\n_c5 = QuantityLabel;\nconst QuantityButton = styled.button`\n  background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)'};\n  color: var(--${props => props.theme}-text-primary);\n  border: 1px solid var(--${props => props.theme}-border);\n  border-radius: var(--border-radius-sm);\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-md);\n  cursor: pointer;\n  transition: background-color var(--transition-fast) ease;\n\n  &:hover {\n    background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)'};\n  }\n`;\n_c6 = QuantityButton;\nconst QuantityValue = styled.span`\n  margin: 0 var(--spacing-md);\n  font-size: var(--font-size-md);\n  font-weight: 500;\n  min-width: 20px;\n  text-align: center;\n`;\n_c7 = QuantityValue;\nconst RollButton = styled.button`\n  background-color: var(--${props => props.theme}-primary);\n  color: ${props => props.theme === 'dark' ? 'black' : 'white'};\n  border: none;\n  border-radius: var(--border-radius-sm);\n  padding: var(--spacing-md);\n  font-size: var(--font-size-md);\n  font-weight: 700;\n  cursor: pointer;\n  transition: background-color var(--transition-fast) ease;\n  margin-bottom: var(--spacing-md);\n\n  &:hover {\n    background-color: var(--${props => props.theme}-primary-variant);\n  }\n`;\n_c8 = RollButton;\nconst ResultsContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  border: 1px solid var(--${props => props.theme}-border);\n  border-radius: var(--border-radius-sm);\n  padding: var(--spacing-sm);\n  background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.02)'};\n`;\n_c9 = ResultsContainer;\nconst RollResult = styled.div`\n  padding: var(--spacing-sm);\n  margin-bottom: var(--spacing-sm);\n  border-radius: var(--border-radius-sm);\n  background-color: ${props => props.isNew ? props.theme === 'dark' ? 'rgba(187, 134, 252, 0.1)' : 'rgba(187, 134, 252, 0.05)' : 'transparent'};\n  border-left: 3px solid ${props => props.isNew ? 'var(--dark-primary)' : props.theme === 'dark' ? 'var(--dark-border)' : 'var(--light-border)'};\n  transition: background-color var(--transition-normal) ease;\n`;\n_c0 = RollResult;\nconst RollTime = styled.div`\n  font-size: var(--font-size-xs);\n  color: var(--${props => props.theme}-text-secondary);\n  margin-bottom: var(--spacing-xs);\n`;\n_c1 = RollTime;\nconst RollFormula = styled.div`\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  margin-bottom: var(--spacing-xs);\n`;\n_c10 = RollFormula;\nconst RollTotal = styled.div`\n  font-size: var(--font-size-lg);\n  font-weight: 700;\n  color: var(--${props => props.theme}-primary);\n`;\n_c11 = RollTotal;\nconst RollDetails = styled.div`\n  font-size: var(--font-size-xs);\n  color: var(--${props => props.theme}-text-secondary);\n  margin-top: var(--spacing-xs);\n`;\n_c12 = RollDetails;\nconst defaultConfig = {\n  defaultDice: 20,\n  defaultQuantity: 1,\n  maxQuantity: 10,\n  availableDice: [4, 6, 8, 10, 12, 20, 100],\n  showHistory: true,\n  maxHistory: 10\n};\nconst DiceRollerWidget = ({\n  id,\n  config\n}) => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const {\n    socket,\n    isConnected\n  } = useSocket();\n  const widgetConfig = {\n    ...defaultConfig,\n    ...config\n  };\n  const [selectedDice, setSelectedDice] = useState(widgetConfig.defaultDice);\n  const [quantity, setQuantity] = useState(widgetConfig.defaultQuantity);\n  const [rolls, setRolls] = useState([]);\n  const [newRollId, setNewRollId] = useState(null);\n\n  // Listen for dice rolls from server\n  useEffect(() => {\n    if (socket && isConnected) {\n      socket.on('dice:roll', roll => {\n        setRolls(prevRolls => [roll, ...prevRolls.slice(0, 9)]);\n        setNewRollId(roll.id);\n\n        // Clear \"new\" status after animation\n        setTimeout(() => {\n          setNewRollId(null);\n        }, 3000);\n      });\n      return () => {\n        socket.off('dice:roll');\n      };\n    }\n  }, [socket, isConnected]);\n  const handleDiceSelect = sides => {\n    setSelectedDice(sides);\n  };\n  const handleQuantityChange = delta => {\n    const newQuantity = Math.max(1, Math.min(widgetConfig.maxQuantity, quantity + delta));\n    setQuantity(newQuantity);\n  };\n  const rollDice = () => {\n    const results = [];\n    let total = 0;\n    for (let i = 0; i < quantity; i++) {\n      const result = Math.floor(Math.random() * selectedDice) + 1;\n      results.push(result);\n      total += result;\n    }\n    const roll = {\n      id: Date.now().toString(),\n      formula: `${quantity}d${selectedDice}`,\n      quantity,\n      sides: selectedDice,\n      results,\n      total,\n      timestamp: new Date().toLocaleTimeString()\n    };\n\n    // Add to local state\n    setRolls(prevRolls => [roll, ...prevRolls.slice(0, widgetConfig.maxHistory - 1)]);\n    setNewRollId(roll.id);\n\n    // Clear \"new\" status after animation\n    setTimeout(() => {\n      setNewRollId(null);\n    }, 3000);\n\n    // Send to server if connected\n    if (socket && isConnected) {\n      socket.emit('dice:roll', roll);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DiceRollerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DiceControls, {\n      children: widgetConfig.availableDice.map(sides => /*#__PURE__*/_jsxDEV(DiceButton, {\n        active: selectedDice === sides,\n        onClick: () => handleDiceSelect(sides),\n        theme: theme,\n        children: [\"d\", sides]\n      }, sides, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuantityControls, {\n      children: [/*#__PURE__*/_jsxDEV(QuantityLabel, {\n        theme: theme,\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuantityButton, {\n        onClick: () => handleQuantityChange(-1),\n        theme: theme,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuantityValue, {\n        children: quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuantityButton, {\n        onClick: () => handleQuantityChange(1),\n        theme: theme,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n      onClick: rollDice,\n      theme: theme,\n      children: [\"Roll \", quantity, \"d\", selectedDice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), widgetConfig.showHistory && /*#__PURE__*/_jsxDEV(ResultsContainer, {\n      theme: theme,\n      children: rolls.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: 'var(--spacing-md)',\n          color: `var(--${theme}-text-secondary)`\n        },\n        children: \"No dice rolls yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this) : rolls.map(roll => /*#__PURE__*/_jsxDEV(RollResult, {\n        isNew: roll.id === newRollId,\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(RollTime, {\n          theme: theme,\n          children: roll.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RollFormula, {\n          children: roll.formula\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RollTotal, {\n          theme: theme,\n          children: roll.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RollDetails, {\n          theme: theme,\n          children: [\"[\", roll.results.join(', '), \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this)]\n      }, roll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(DiceRollerWidget, \"d4yuVPy9qHz3acXQzjpwlGHGdVo=\", false, function () {\n  return [useTheme, useSocket];\n});\n_c13 = DiceRollerWidget;\nexport default _c14 = withWidget(DiceRollerWidget, {\n  metadata: {\n    name: 'Dice Roller',\n    description: 'Roll virtual dice for your game',\n    category: WidgetCategory.UTILITY,\n    icon: '🎲',\n    defaultSize: {\n      w: 4,\n      h: 3\n    },\n    minW: 3,\n    minH: 2\n  },\n  defaultConfig\n});\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"DiceRollerContainer\");\n$RefreshReg$(_c2, \"DiceControls\");\n$RefreshReg$(_c3, \"DiceButton\");\n$RefreshReg$(_c4, \"QuantityControls\");\n$RefreshReg$(_c5, \"QuantityLabel\");\n$RefreshReg$(_c6, \"QuantityButton\");\n$RefreshReg$(_c7, \"QuantityValue\");\n$RefreshReg$(_c8, \"RollButton\");\n$RefreshReg$(_c9, \"ResultsContainer\");\n$RefreshReg$(_c0, \"RollResult\");\n$RefreshReg$(_c1, \"RollTime\");\n$RefreshReg$(_c10, \"RollFormula\");\n$RefreshReg$(_c11, \"RollTotal\");\n$RefreshReg$(_c12, \"RollDetails\");\n$RefreshReg$(_c13, \"DiceRollerWidget\");\n$RefreshReg$(_c14, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","styled","useSocket","useTheme","WidgetCategory","withWidget","jsxDEV","_jsxDEV","DiceRollerContainer","div","_c","DiceControls","_c2","DiceButton","button","props","active","theme","_c3","QuantityControls","_c4","QuantityLabel","span","_c5","QuantityButton","_c6","QuantityValue","_c7","RollButton","_c8","ResultsContainer","_c9","RollResult","isNew","_c0","RollTime","_c1","RollFormula","_c10","RollTotal","_c11","RollDetails","_c12","defaultConfig","defaultDice","defaultQuantity","maxQuantity","availableDice","showHistory","maxHistory","DiceRollerWidget","id","config","_s","socket","isConnected","widgetConfig","selectedDice","setSelectedDice","quantity","setQuantity","rolls","setRolls","newRollId","setNewRollId","on","roll","prevRolls","slice","setTimeout","off","handleDiceSelect","sides","handleQuantityChange","delta","newQuantity","Math","max","min","rollDice","results","total","i","result","floor","random","push","Date","now","toString","formula","timestamp","toLocaleTimeString","emit","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","style","textAlign","padding","color","join","_c13","_c14","metadata","name","description","category","UTILITY","icon","defaultSize","w","h","minW","minH","$RefreshReg$"],"sources":["/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/DiceRollerWidget.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSocket } from '../../context/SocketContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { WidgetProps, WidgetCategory } from '../../types/widget';\nimport withWidget from './withWidget';\n\nconst DiceRollerContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DiceControls = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: var(--spacing-sm);\n  margin-bottom: var(--spacing-md);\n`;\n\nconst DiceButton = styled.button<{ active?: boolean }>`\n  background-color: ${props => props.active\n    ? `var(--${props.theme}-primary)`\n    : props.theme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)'};\n  color: ${props => props.active\n    ? (props.theme === 'dark' ? 'black' : 'white')\n    : `var(--${props.theme}-text-primary)`};\n  border: 1px solid ${props => props.active\n    ? `var(--${props.theme}-primary)`\n    : `var(--${props.theme}-border)`};\n  border-radius: var(--border-radius-sm);\n  padding: var(--spacing-sm);\n  font-size: var(--font-size-md);\n  font-weight: ${props => props.active ? '700' : '400'};\n  cursor: pointer;\n  transition: all var(--transition-fast) ease;\n\n  &:hover {\n    background-color: ${props => props.active\n      ? `var(--${props.theme}-primary-variant)`\n      : props.theme === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)'};\n  }\n`;\n\nconst QuantityControls = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: var(--spacing-md);\n`;\n\nconst QuantityLabel = styled.span`\n  margin-right: var(--spacing-md);\n  font-size: var(--font-size-sm);\n  color: var(--${props => props.theme}-text-secondary);\n`;\n\nconst QuantityButton = styled.button`\n  background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)'};\n  color: var(--${props => props.theme}-text-primary);\n  border: 1px solid var(--${props => props.theme}-border);\n  border-radius: var(--border-radius-sm);\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-md);\n  cursor: pointer;\n  transition: background-color var(--transition-fast) ease;\n\n  &:hover {\n    background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)'};\n  }\n`;\n\nconst QuantityValue = styled.span`\n  margin: 0 var(--spacing-md);\n  font-size: var(--font-size-md);\n  font-weight: 500;\n  min-width: 20px;\n  text-align: center;\n`;\n\nconst RollButton = styled.button`\n  background-color: var(--${props => props.theme}-primary);\n  color: ${props => props.theme === 'dark' ? 'black' : 'white'};\n  border: none;\n  border-radius: var(--border-radius-sm);\n  padding: var(--spacing-md);\n  font-size: var(--font-size-md);\n  font-weight: 700;\n  cursor: pointer;\n  transition: background-color var(--transition-fast) ease;\n  margin-bottom: var(--spacing-md);\n\n  &:hover {\n    background-color: var(--${props => props.theme}-primary-variant);\n  }\n`;\n\nconst ResultsContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  border: 1px solid var(--${props => props.theme}-border);\n  border-radius: var(--border-radius-sm);\n  padding: var(--spacing-sm);\n  background-color: ${props => props.theme === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.02)'};\n`;\n\nconst RollResult = styled.div<{ isNew?: boolean }>`\n  padding: var(--spacing-sm);\n  margin-bottom: var(--spacing-sm);\n  border-radius: var(--border-radius-sm);\n  background-color: ${props => props.isNew\n    ? (props.theme === 'dark' ? 'rgba(187, 134, 252, 0.1)' : 'rgba(187, 134, 252, 0.05)')\n    : 'transparent'};\n  border-left: 3px solid ${props => props.isNew\n    ? 'var(--dark-primary)'\n    : props.theme === 'dark' ? 'var(--dark-border)' : 'var(--light-border)'};\n  transition: background-color var(--transition-normal) ease;\n`;\n\nconst RollTime = styled.div`\n  font-size: var(--font-size-xs);\n  color: var(--${props => props.theme}-text-secondary);\n  margin-bottom: var(--spacing-xs);\n`;\n\nconst RollFormula = styled.div`\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  margin-bottom: var(--spacing-xs);\n`;\n\nconst RollTotal = styled.div`\n  font-size: var(--font-size-lg);\n  font-weight: 700;\n  color: var(--${props => props.theme}-primary);\n`;\n\nconst RollDetails = styled.div`\n  font-size: var(--font-size-xs);\n  color: var(--${props => props.theme}-text-secondary);\n  margin-top: var(--spacing-xs);\n`;\n\ninterface DiceRoll {\n  id: string;\n  formula: string;\n  quantity: number;\n  sides: number;\n  results: number[];\n  total: number;\n  timestamp: string;\n}\n\ninterface DiceRollerConfig {\n  defaultDice: number;\n  defaultQuantity: number;\n  maxQuantity: number;\n  availableDice: number[];\n  showHistory: boolean;\n  maxHistory: number;\n}\n\nconst defaultConfig: DiceRollerConfig = {\n  defaultDice: 20,\n  defaultQuantity: 1,\n  maxQuantity: 10,\n  availableDice: [4, 6, 8, 10, 12, 20, 100],\n  showHistory: true,\n  maxHistory: 10\n};\n\nconst DiceRollerWidget: React.FC<WidgetProps> = ({ id, config }) => {\n  const { theme } = useTheme();\n  const { socket, isConnected } = useSocket();\n  const widgetConfig = { ...defaultConfig, ...config } as DiceRollerConfig;\n\n  const [selectedDice, setSelectedDice] = useState(widgetConfig.defaultDice);\n  const [quantity, setQuantity] = useState(widgetConfig.defaultQuantity);\n  const [rolls, setRolls] = useState<DiceRoll[]>([]);\n  const [newRollId, setNewRollId] = useState<string | null>(null);\n\n  // Listen for dice rolls from server\n  useEffect(() => {\n    if (socket && isConnected) {\n      socket.on('dice:roll', (roll: DiceRoll) => {\n        setRolls(prevRolls => [roll, ...prevRolls.slice(0, 9)]);\n        setNewRollId(roll.id);\n\n        // Clear \"new\" status after animation\n        setTimeout(() => {\n          setNewRollId(null);\n        }, 3000);\n      });\n\n      return () => {\n        socket.off('dice:roll');\n      };\n    }\n  }, [socket, isConnected]);\n\n  const handleDiceSelect = (sides: number) => {\n    setSelectedDice(sides);\n  };\n\n  const handleQuantityChange = (delta: number) => {\n    const newQuantity = Math.max(1, Math.min(widgetConfig.maxQuantity, quantity + delta));\n    setQuantity(newQuantity);\n  };\n\n  const rollDice = () => {\n    const results: number[] = [];\n    let total = 0;\n\n    for (let i = 0; i < quantity; i++) {\n      const result = Math.floor(Math.random() * selectedDice) + 1;\n      results.push(result);\n      total += result;\n    }\n\n    const roll: DiceRoll = {\n      id: Date.now().toString(),\n      formula: `${quantity}d${selectedDice}`,\n      quantity,\n      sides: selectedDice,\n      results,\n      total,\n      timestamp: new Date().toLocaleTimeString(),\n    };\n\n    // Add to local state\n    setRolls(prevRolls => [roll, ...prevRolls.slice(0, widgetConfig.maxHistory - 1)]);\n    setNewRollId(roll.id);\n\n    // Clear \"new\" status after animation\n    setTimeout(() => {\n      setNewRollId(null);\n    }, 3000);\n\n    // Send to server if connected\n    if (socket && isConnected) {\n      socket.emit('dice:roll', roll);\n    }\n  };\n\n  return (\n    <DiceRollerContainer>\n      <DiceControls>\n        {widgetConfig.availableDice.map(sides => (\n          <DiceButton\n            key={sides}\n            active={selectedDice === sides}\n            onClick={() => handleDiceSelect(sides)}\n            theme={theme}\n          >\n            d{sides}\n          </DiceButton>\n        ))}\n      </DiceControls>\n\n      <QuantityControls>\n        <QuantityLabel theme={theme}>Quantity:</QuantityLabel>\n        <QuantityButton onClick={() => handleQuantityChange(-1)} theme={theme}>-</QuantityButton>\n        <QuantityValue>{quantity}</QuantityValue>\n        <QuantityButton onClick={() => handleQuantityChange(1)} theme={theme}>+</QuantityButton>\n      </QuantityControls>\n\n      <RollButton onClick={rollDice} theme={theme}>\n        Roll {quantity}d{selectedDice}\n      </RollButton>\n\n      {widgetConfig.showHistory && (\n        <ResultsContainer theme={theme}>\n          {rolls.length === 0 ? (\n            <div style={{ textAlign: 'center', padding: 'var(--spacing-md)', color: `var(--${theme}-text-secondary)` }}>\n              No dice rolls yet\n            </div>\n          ) : (\n            rolls.map(roll => (\n              <RollResult key={roll.id} isNew={roll.id === newRollId} theme={theme}>\n                <RollTime theme={theme}>{roll.timestamp}</RollTime>\n                <RollFormula>{roll.formula}</RollFormula>\n                <RollTotal theme={theme}>{roll.total}</RollTotal>\n                <RollDetails theme={theme}>\n                  [{roll.results.join(', ')}]\n                </RollDetails>\n              </RollResult>\n            ))\n          )}\n        </ResultsContainer>\n      )}\n    </DiceRollerContainer>\n  );\n};\n\nexport default withWidget(DiceRollerWidget, {\n  metadata: {\n    name: 'Dice Roller',\n    description: 'Roll virtual dice for your game',\n    category: WidgetCategory.UTILITY,\n    icon: '🎲',\n    defaultSize: {\n      w: 4,\n      h: 3,\n    },\n    minW: 3,\n    minH: 2,\n  },\n  defaultConfig,\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}