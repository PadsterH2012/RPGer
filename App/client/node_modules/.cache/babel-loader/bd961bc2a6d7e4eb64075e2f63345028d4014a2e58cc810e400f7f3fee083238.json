{"ast":null,"code":"var _jsxFileName = \"/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/withWidget.tsx\";\n/**\n * withWidget Higher-Order Component\n * \n * HOC for creating widget components with standard functionality.\n */\n\nimport React from 'react';\nimport BaseWidget from './BaseWidget';\nimport { WidgetCategory } from '../../types/widget';\nimport widgetRegistry from '../../services/WidgetRegistry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Higher-order component for creating widgets\n * \n * @param WrappedComponent Component to wrap\n * @param options Widget options\n * @returns Widget component\n */\nexport const withWidget = (WrappedComponent, options) => {\n  // Generate widget ID if not provided\n  const widgetId = options.metadata.id || `widget-${options.metadata.name.toLowerCase().replace(/\\s+/g, '-')}`;\n\n  // Create metadata\n  const metadata = {\n    id: widgetId,\n    name: options.metadata.name,\n    description: options.metadata.description,\n    category: options.metadata.category || WidgetCategory.CUSTOM,\n    version: options.metadata.version || '1.0.0',\n    defaultSize: options.metadata.defaultSize,\n    icon: options.metadata.icon,\n    author: options.metadata.author,\n    minW: options.metadata.minW,\n    minH: options.metadata.minH,\n    maxW: options.metadata.maxW,\n    maxH: options.metadata.maxH\n  };\n\n  // Create widget component\n  const WidgetComponent = props => {\n    return /*#__PURE__*/_jsxDEV(BaseWidget, {\n      id: widgetId,\n      defaultConfig: options.defaultConfig,\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Set display name\n  WidgetComponent.displayName = `Widget(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\n\n  // Register widget\n  widgetRegistry.registerWidget({\n    metadata,\n    component: WidgetComponent\n  });\n  return WidgetComponent;\n};\nexport default withWidget;","map":{"version":3,"names":["React","BaseWidget","WidgetCategory","widgetRegistry","jsxDEV","_jsxDEV","withWidget","WrappedComponent","options","widgetId","metadata","id","name","toLowerCase","replace","description","category","CUSTOM","version","defaultSize","icon","author","minW","minH","maxW","maxH","WidgetComponent","props","defaultConfig","children","fileName","_jsxFileName","lineNumber","columnNumber","displayName","registerWidget","component"],"sources":["/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/withWidget.tsx"],"sourcesContent":["/**\n * withWidget Higher-Order Component\n * \n * HOC for creating widget components with standard functionality.\n */\n\nimport React from 'react';\nimport BaseWidget, { BaseWidgetProps } from './BaseWidget';\nimport { WidgetMetadata, WidgetCategory, WidgetProps } from '../../types/widget';\nimport widgetRegistry from '../../services/WidgetRegistry';\n\ninterface WithWidgetOptions {\n  metadata: Omit<WidgetMetadata, 'id' | 'category' | 'version'> & {\n    id?: string;\n    category?: WidgetCategory;\n    version?: string;\n  };\n  defaultConfig?: Record<string, any>;\n}\n\n/**\n * Higher-order component for creating widgets\n * \n * @param WrappedComponent Component to wrap\n * @param options Widget options\n * @returns Widget component\n */\nexport const withWidget = <P extends WidgetProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: WithWidgetOptions\n) => {\n  // Generate widget ID if not provided\n  const widgetId = options.metadata.id || `widget-${options.metadata.name.toLowerCase().replace(/\\s+/g, '-')}`;\n  \n  // Create metadata\n  const metadata: WidgetMetadata = {\n    id: widgetId,\n    name: options.metadata.name,\n    description: options.metadata.description,\n    category: options.metadata.category || WidgetCategory.CUSTOM,\n    version: options.metadata.version || '1.0.0',\n    defaultSize: options.metadata.defaultSize,\n    icon: options.metadata.icon,\n    author: options.metadata.author,\n    minW: options.metadata.minW,\n    minH: options.metadata.minH,\n    maxW: options.metadata.maxW,\n    maxH: options.metadata.maxH,\n  };\n  \n  // Create widget component\n  const WidgetComponent: React.FC<P> = (props) => {\n    return (\n      <BaseWidget\n        id={widgetId}\n        defaultConfig={options.defaultConfig}\n        {...props}\n      >\n        <WrappedComponent {...props} />\n      </BaseWidget>\n    );\n  };\n  \n  // Set display name\n  WidgetComponent.displayName = `Widget(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\n  \n  // Register widget\n  widgetRegistry.registerWidget({\n    metadata,\n    component: WidgetComponent as any,\n  });\n  \n  return WidgetComponent;\n};\n\nexport default withWidget;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAA2B,cAAc;AAC1D,SAAyBC,cAAc,QAAqB,oBAAoB;AAChF,OAAOC,cAAc,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGA,CACxBC,gBAAwC,EACxCC,OAA0B,KACvB;EACH;EACA,MAAMC,QAAQ,GAAGD,OAAO,CAACE,QAAQ,CAACC,EAAE,IAAI,UAAUH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;;EAE5G;EACA,MAAMJ,QAAwB,GAAG;IAC/BC,EAAE,EAAEF,QAAQ;IACZG,IAAI,EAAEJ,OAAO,CAACE,QAAQ,CAACE,IAAI;IAC3BG,WAAW,EAAEP,OAAO,CAACE,QAAQ,CAACK,WAAW;IACzCC,QAAQ,EAAER,OAAO,CAACE,QAAQ,CAACM,QAAQ,IAAId,cAAc,CAACe,MAAM;IAC5DC,OAAO,EAAEV,OAAO,CAACE,QAAQ,CAACQ,OAAO,IAAI,OAAO;IAC5CC,WAAW,EAAEX,OAAO,CAACE,QAAQ,CAACS,WAAW;IACzCC,IAAI,EAAEZ,OAAO,CAACE,QAAQ,CAACU,IAAI;IAC3BC,MAAM,EAAEb,OAAO,CAACE,QAAQ,CAACW,MAAM;IAC/BC,IAAI,EAAEd,OAAO,CAACE,QAAQ,CAACY,IAAI;IAC3BC,IAAI,EAAEf,OAAO,CAACE,QAAQ,CAACa,IAAI;IAC3BC,IAAI,EAAEhB,OAAO,CAACE,QAAQ,CAACc,IAAI;IAC3BC,IAAI,EAAEjB,OAAO,CAACE,QAAQ,CAACe;EACzB,CAAC;;EAED;EACA,MAAMC,eAA4B,GAAIC,KAAK,IAAK;IAC9C,oBACEtB,OAAA,CAACJ,UAAU;MACTU,EAAE,EAAEF,QAAS;MACbmB,aAAa,EAAEpB,OAAO,CAACoB,aAAc;MAAA,GACjCD,KAAK;MAAAE,QAAA,eAETxB,OAAA,CAACE,gBAAgB;QAAA,GAAKoB;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEjB,CAAC;;EAED;EACAP,eAAe,CAACQ,WAAW,GAAG,UAAU3B,gBAAgB,CAAC2B,WAAW,IAAI3B,gBAAgB,CAACK,IAAI,IAAI,WAAW,GAAG;;EAE/G;EACAT,cAAc,CAACgC,cAAc,CAAC;IAC5BzB,QAAQ;IACR0B,SAAS,EAAEV;EACb,CAAC,CAAC;EAEF,OAAOA,eAAe;AACxB,CAAC;AAED,eAAepB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}