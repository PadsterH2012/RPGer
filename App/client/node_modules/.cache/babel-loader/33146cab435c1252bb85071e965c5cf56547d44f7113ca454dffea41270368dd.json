{"ast":null,"code":"var _jsxFileName = \"/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/BaseWidget.tsx\",\n  _s = $RefreshSig$();\n/**\n * BaseWidget Component\n * \n * Base component for all widgets to extend.\n */\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from '../../context/ThemeContext';\nimport { useWidget } from '../../hooks/useWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WidgetWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n_c = WidgetWrapper;\nconst WidgetContent = styled.div`\n  flex: 1;\n  overflow: auto;\n  padding: var(--spacing-sm);\n`;\n_c2 = WidgetContent;\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n_c3 = LoadingOverlay;\nconst ErrorMessage = styled.div`\n  color: var(--error);\n  padding: var(--spacing-md);\n  text-align: center;\n  border: 1px solid var(--error);\n  border-radius: var(--border-radius-sm);\n  margin: var(--spacing-md);\n`;\n_c4 = ErrorMessage;\nconst BaseWidget = ({\n  id,\n  config: propConfig,\n  onConfigChange: propOnConfigChange,\n  defaultConfig,\n  onInit,\n  onUpdate,\n  onDestroy,\n  onConfigChange,\n  onDataUpdate,\n  children,\n  className,\n  style\n}) => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const {\n    config,\n    updateConfig,\n    isLoading,\n    error,\n    resetError,\n    sendEvent\n  } = useWidget(id, {\n    defaultConfig,\n    onInit,\n    onUpdate,\n    onDestroy,\n    onConfigChange: newConfig => {\n      // Call both the internal and external config change handlers\n      if (onConfigChange) {\n        onConfigChange(newConfig);\n      }\n      if (propOnConfigChange) {\n        propOnConfigChange(newConfig);\n      }\n    },\n    onDataUpdate\n  });\n\n  // Sync with prop config if provided\n  useEffect(() => {\n    if (propConfig && JSON.stringify(propConfig) !== JSON.stringify(config)) {\n      updateConfig(propConfig);\n    }\n  }, [propConfig]);\n  return /*#__PURE__*/_jsxDEV(WidgetWrapper, {\n    className: className,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(WidgetContent, {\n      children: error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        onClick: resetError,\n        children: [\"Error: \", error.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"(Click to dismiss)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseWidget, \"4KV46ixka5O7K3wszfMFdHeCpzE=\", false, function () {\n  return [useTheme, useWidget];\n});\n_c5 = BaseWidget;\nexport default BaseWidget;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"WidgetWrapper\");\n$RefreshReg$(_c2, \"WidgetContent\");\n$RefreshReg$(_c3, \"LoadingOverlay\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"BaseWidget\");","map":{"version":3,"names":["React","useEffect","styled","useTheme","useWidget","jsxDEV","_jsxDEV","WidgetWrapper","div","_c","WidgetContent","_c2","LoadingOverlay","_c3","ErrorMessage","_c4","BaseWidget","id","config","propConfig","onConfigChange","propOnConfigChange","defaultConfig","onInit","onUpdate","onDestroy","onDataUpdate","children","className","style","_s","theme","updateConfig","isLoading","error","resetError","sendEvent","newConfig","JSON","stringify","onClick","message","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/mnt/network_repo/test_ai_rpg/RPGer/client/src/components/widgets/BaseWidget.tsx"],"sourcesContent":["/**\n * BaseWidget Component\n * \n * Base component for all widgets to extend.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from '../../context/ThemeContext';\nimport { useWidget } from '../../hooks/useWidget';\nimport { WidgetProps, WidgetConfig } from '../../types/widget';\n\nconst WidgetWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst WidgetContent = styled.div`\n  flex: 1;\n  overflow: auto;\n  padding: var(--spacing-sm);\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--error);\n  padding: var(--spacing-md);\n  text-align: center;\n  border: 1px solid var(--error);\n  border-radius: var(--border-radius-sm);\n  margin: var(--spacing-md);\n`;\n\nexport interface BaseWidgetProps extends WidgetProps {\n  defaultConfig?: WidgetConfig;\n  onInit?: () => void | Promise<void>;\n  onUpdate?: () => void | Promise<void>;\n  onDestroy?: () => void | Promise<void>;\n  onConfigChange?: (config: WidgetConfig) => void | Promise<void>;\n  onDataUpdate?: (data: any) => void | Promise<void>;\n}\n\nconst BaseWidget: React.FC<BaseWidgetProps> = ({\n  id,\n  config: propConfig,\n  onConfigChange: propOnConfigChange,\n  defaultConfig,\n  onInit,\n  onUpdate,\n  onDestroy,\n  onConfigChange,\n  onDataUpdate,\n  children,\n  className,\n  style,\n}) => {\n  const { theme } = useTheme();\n  const {\n    config,\n    updateConfig,\n    isLoading,\n    error,\n    resetError,\n    sendEvent\n  } = useWidget(id, {\n    defaultConfig,\n    onInit,\n    onUpdate,\n    onDestroy,\n    onConfigChange: (newConfig) => {\n      // Call both the internal and external config change handlers\n      if (onConfigChange) {\n        onConfigChange(newConfig);\n      }\n      \n      if (propOnConfigChange) {\n        propOnConfigChange(newConfig);\n      }\n    },\n    onDataUpdate\n  });\n  \n  // Sync with prop config if provided\n  useEffect(() => {\n    if (propConfig && JSON.stringify(propConfig) !== JSON.stringify(config)) {\n      updateConfig(propConfig);\n    }\n  }, [propConfig]);\n  \n  return (\n    <WidgetWrapper className={className} style={style}>\n      <WidgetContent>\n        {error ? (\n          <ErrorMessage onClick={resetError}>\n            Error: {error.message}\n            <br />\n            <small>(Click to dismiss)</small>\n          </ErrorMessage>\n        ) : (\n          children\n        )}\n      </WidgetContent>\n      \n      {isLoading && (\n        <LoadingOverlay>\n          <div>Loading...</div>\n        </LoadingOverlay>\n      )}\n    </WidgetWrapper>\n  );\n};\n\nexport default BaseWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}